//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Mon Oct 28 12:37:01 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_start                      O     1
// get_result                     O    32 reg
// RDY_get_result                 O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// start_a                        I     8
// start_b                        I     8
// start_c                        I    32
// EN_start                       I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMACint32(CLK,
		  RST_N,

		  start_a,
		  start_b,
		  start_c,
		  EN_start,
		  RDY_start,

		  get_result,
		  RDY_get_result);
  input  CLK;
  input  RST_N;

  // action method start
  input  [7 : 0] start_a;
  input  [7 : 0] start_b;
  input  [31 : 0] start_c;
  input  EN_start;
  output RDY_start;

  // value method get_result
  output [31 : 0] get_result;
  output RDY_get_result;

  // signals for module outputs
  wire [31 : 0] get_result;
  wire RDY_get_result, RDY_start;

  // inlined wires
  wire [161 : 0] stage1_fifo_rv_port0__write_1,
		 stage1_fifo_rv_port1__read,
		 stage1_fifo_rv_port1__write_1,
		 stage1_fifo_rv_port2__read;
  wire [97 : 0] inp_fifo_rv_port0__write_1,
		inp_fifo_rv_port1__read,
		inp_fifo_rv_port1__write_1,
		inp_fifo_rv_port2__read,
		stage2_fifo_rv_port1__read,
		stage2_fifo_rv_port1__write_1,
		stage2_fifo_rv_port2__read,
		stage3_fifo_rv_port1__read,
		stage3_fifo_rv_port1__write_1,
		stage3_fifo_rv_port2__read,
		stage4_fifo_rv_port1__read,
		stage4_fifo_rv_port1__write_1,
		stage4_fifo_rv_port2__read;
  wire [64 : 0] adder_ififo_rv_port0__write_1,
		adder_ififo_rv_port1__read,
		adder_ififo_rv_port1__write_1,
		adder_ififo_rv_port2__read;
  wire [33 : 0] adder_ofifo_rv_port0__write_1,
		adder_ofifo_rv_port1__read,
		adder_ofifo_rv_port1__write_1,
		adder_ofifo_rv_port2__read;

  // register adder_ififo_rv
  reg [64 : 0] adder_ififo_rv;
  wire [64 : 0] adder_ififo_rv_D_IN;
  wire adder_ififo_rv_EN;

  // register adder_ofifo_rv
  reg [33 : 0] adder_ofifo_rv;
  wire [33 : 0] adder_ofifo_rv_D_IN;
  wire adder_ofifo_rv_EN;

  // register ans
  reg [31 : 0] ans;
  wire [31 : 0] ans_D_IN;
  wire ans_EN;

  // register inp_fifo_rv
  reg [97 : 0] inp_fifo_rv;
  wire [97 : 0] inp_fifo_rv_D_IN;
  wire inp_fifo_rv_EN;

  // register rg_out_valid
  reg rg_out_valid;
  wire rg_out_valid_D_IN, rg_out_valid_EN;

  // register stage1_fifo_rv
  reg [161 : 0] stage1_fifo_rv;
  wire [161 : 0] stage1_fifo_rv_D_IN;
  wire stage1_fifo_rv_EN;

  // register stage2_fifo_rv
  reg [97 : 0] stage2_fifo_rv;
  wire [97 : 0] stage2_fifo_rv_D_IN;
  wire stage2_fifo_rv_EN;

  // register stage3_fifo_rv
  reg [97 : 0] stage3_fifo_rv;
  wire [97 : 0] stage3_fifo_rv_D_IN;
  wire stage3_fifo_rv_EN;

  // register stage4_fifo_rv
  reg [97 : 0] stage4_fifo_rv;
  wire [97 : 0] stage4_fifo_rv_D_IN;
  wire stage4_fifo_rv_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_r1_fin,
       CAN_FIRE_RL_r1_pipe_stage1,
       CAN_FIRE_RL_r1_pipe_stage2,
       CAN_FIRE_RL_r1_pipe_stage3,
       CAN_FIRE_RL_r1_pipe_stage4,
       CAN_FIRE_RL_r1_pipe_stage5,
       CAN_FIRE_RL_r1_pipe_stage6,
       CAN_FIRE_RL_rg_out_valid__dreg_update,
       CAN_FIRE_start,
       WILL_FIRE_RL_r1_fin,
       WILL_FIRE_RL_r1_pipe_stage1,
       WILL_FIRE_RL_r1_pipe_stage2,
       WILL_FIRE_RL_r1_pipe_stage3,
       WILL_FIRE_RL_r1_pipe_stage4,
       WILL_FIRE_RL_r1_pipe_stage5,
       WILL_FIRE_RL_r1_pipe_stage6,
       WILL_FIRE_RL_rg_out_valid__dreg_update,
       WILL_FIRE_start;

  // remaining internal signals
  wire [63 : 0] IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_inp_f_ETC___d54,
		IF_inp_fifo_rv_port0__read_BIT_35_5_THEN_inp_f_ETC___d55,
		IF_inp_fifo_rv_port0__read_BIT_36_2_THEN_inp_f_ETC___d56;
  wire [32 : 0] IF_IF_stage1_fifo_rv_port0__read__8_BIT_104_6__ETC__q12,
		v_sum__h11585,
		v_sum__h15918,
		v_sum__h20320;
  wire [31 : 0] IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_IF_in_ETC___d27,
		IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115,
		IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124,
		a_ext___1__h29271,
		a_ext__h29142,
		b__h2034,
		b__h3472,
		b__h3501,
		b__h3530,
		b_ext___1__h29303,
		b_ext__h29143,
		cin093_AND_shift_a090__q1,
		cin__h2035,
		cin__h2064,
		cin__h2093,
		cin__h3473,
		cin__h3502,
		cin__h3531,
		lsb_result_carry__h2038,
		lsb_result_carry__h2067,
		lsb_result_carry__h2096,
		lsb_result_sum__h2037,
		lsb_result_sum__h2066,
		lsb_result_sum__h2095,
		product___1__h2527,
		product__h2314,
		shift_a__h2032,
		shift_a__h2061,
		shift_a__h2090,
		shift_a__h3470,
		shift_a__h3499,
		shift_a__h3528,
		shift_a__h3557,
		stage_result_carry__h3476,
		stage_result_carry__h3505,
		stage_result_carry__h3534,
		stage_result_carry__h3563,
		stage_result_sum__h3475,
		stage_result_sum__h3504,
		stage_result_sum__h3533,
		stage_result_sum__h3562,
		v_sum__h24720,
		x165_OR_y166__q10,
		x285_OR_y286__q11,
		x605_OR_y606__q4,
		x625_OR_y626__q3,
		x645_OR_y646__q2,
		x736_OR_y737__q5,
		x__h2147,
		x__h2165,
		x__h2167,
		x__h2271,
		x__h2285,
		x__h2287,
		x__h2489,
		x__h29227,
		x__h29276,
		x__h3588,
		x__h3605,
		x__h3607,
		x__h3625,
		x__h3627,
		x__h3645,
		x__h3647,
		x__h3670,
		x__h3686,
		x__h3702,
		x__h3736,
		x__h3738,
		y__h2166,
		y__h2168,
		y__h2286,
		y__h2288,
		y__h3606,
		y__h3608,
		y__h3626,
		y__h3628,
		y__h3646,
		y__h3648,
		y__h3737,
		y__h3739;
  wire [24 : 0] x__h20355;
  wire [16 : 0] x__h15953;
  wire [8 : 0] IF_adder_ififo_rv_BIT_32_AND_adder_ififo_rv_BI_ETC__q6,
	       IF_stage2_fifo_rv_BIT_8_THEN_1_ELSE_0__q7,
	       IF_stage3_fifo_rv_BIT_16_THEN_1_ELSE_0__q8,
	       IF_stage4_fifo_rv_BIT_24_THEN_1_ELSE_0__q9,
	       psum1__h11405,
	       psum2__h15743,
	       psum2__h20145;
  wire [6 : 0] adder_ififo_rv_port0__read__12_BIT_38_23_XOR_a_ETC___d477,
	       stage2_fifo_rv_port0__read__81_BIT_79_91_XOR_s_ETC___d549,
	       stage3_fifo_rv_port0__read__55_BIT_87_65_XOR_s_ETC___d623,
	       stage4_fifo_rv_port0__read__29_BIT_95_38_XOR_s_ETC___d696;
  wire [4 : 0] adder_ififo_rv_port0__read__12_BIT_36_29_XOR_a_ETC___d476,
	       stage2_fifo_rv_port0__read__81_BIT_77_97_XOR_s_ETC___d548,
	       stage3_fifo_rv_port0__read__55_BIT_85_71_XOR_s_ETC___d622,
	       stage4_fifo_rv_port0__read__29_BIT_93_44_XOR_s_ETC___d695;
  wire [2 : 0] adder_ififo_rv_port0__read__12_BIT_34_35_XOR_a_ETC___d475,
	       stage2_fifo_rv_port0__read__81_BIT_75_03_XOR_s_ETC___d547,
	       stage3_fifo_rv_port0__read__55_BIT_83_77_XOR_s_ETC___d621,
	       stage4_fifo_rv_port0__read__29_BIT_91_50_XOR_s_ETC___d694;
  wire IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d312,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d314,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d316,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d318,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d320,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d322,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d324,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d326,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d328,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d330,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d332,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d334,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d336,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d338,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d340,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d342,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d344,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d346,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d348,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d350,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d352,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d354,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d356,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d358,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d360,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d362,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d364,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d366,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d368,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d370,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d372,
       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d374,
       sign___1__h29304,
       v_overflow__h24719,
       v_sign__h29231,
       x__h12313,
       x__h12596,
       x__h12693,
       x__h12878,
       x__h12975,
       x__h13160,
       x__h13257,
       x__h13442,
       x__h13539,
       x__h13724,
       x__h13821,
       x__h14006,
       x__h14103,
       x__h16373,
       x__h16696,
       x__h16793,
       x__h16978,
       x__h17075,
       x__h17260,
       x__h17357,
       x__h17542,
       x__h17639,
       x__h17824,
       x__h17921,
       x__h18106,
       x__h18203,
       x__h18388,
       x__h18485,
       x__h20775,
       x__h21098,
       x__h21195,
       x__h21380,
       x__h21477,
       x__h21662,
       x__h21759,
       x__h21944,
       x__h22041,
       x__h22226,
       x__h22323,
       x__h22508,
       x__h22605,
       x__h22790,
       x__h22887,
       x__h25185,
       x__h25508,
       x__h25605,
       x__h25790,
       x__h25887,
       x__h26072,
       x__h26169,
       x__h26354,
       x__h26451,
       x__h26636,
       x__h26733,
       x__h26918,
       x__h27015,
       x__h27200,
       x__h27297,
       x__h3393,
       x__h4331,
       x__h4486,
       x__h4533,
       x__h4640,
       x__h4687,
       x__h4794,
       x__h4841,
       x__h4948,
       x__h4995,
       x__h5102,
       x__h5149,
       x__h5256,
       x__h5303,
       x__h5410,
       x__h5457,
       x__h5564,
       x__h5611,
       x__h5718,
       x__h5765,
       x__h5872,
       x__h5919,
       x__h6026,
       x__h6073,
       x__h6180,
       x__h6227,
       x__h6334,
       x__h6381,
       x__h6488,
       x__h6535,
       x__h6642,
       x__h6689,
       x__h6796,
       x__h6843,
       x__h6950,
       x__h6997,
       x__h7104,
       x__h7151,
       x__h7258,
       x__h7305,
       x__h7412,
       x__h7459,
       x__h7566,
       x__h7613,
       x__h7720,
       x__h7767,
       x__h7874,
       x__h7921,
       x__h8028,
       x__h8075,
       x__h8182,
       x__h8229,
       x__h8336,
       x__h8383,
       x__h8490,
       x__h8537,
       x__h8644,
       x__h8691,
       x__h8798,
       x__h8845,
       y__h12314,
       y__h12411,
       y__h12597,
       y__h12694,
       y__h12879,
       y__h12976,
       y__h13161,
       y__h13258,
       y__h13443,
       y__h13540,
       y__h13725,
       y__h13822,
       y__h14007,
       y__h14104,
       y__h16374,
       y__h16511,
       y__h16697,
       y__h16794,
       y__h16979,
       y__h17076,
       y__h17261,
       y__h17358,
       y__h17543,
       y__h17640,
       y__h17825,
       y__h17922,
       y__h18107,
       y__h18204,
       y__h18389,
       y__h18486,
       y__h20776,
       y__h20913,
       y__h21099,
       y__h21196,
       y__h21381,
       y__h21478,
       y__h21663,
       y__h21760,
       y__h21945,
       y__h22042,
       y__h22227,
       y__h22324,
       y__h22509,
       y__h22606,
       y__h22791,
       y__h22888,
       y__h25186,
       y__h25323,
       y__h25509,
       y__h25606,
       y__h25791,
       y__h25888,
       y__h26073,
       y__h26170,
       y__h26355,
       y__h26452,
       y__h26637,
       y__h26734,
       y__h26919,
       y__h27016,
       y__h27201,
       y__h27298,
       y__h3394,
       y__h4332,
       y__h4379,
       y__h4487,
       y__h4534,
       y__h4641,
       y__h4688,
       y__h4795,
       y__h4842,
       y__h4949,
       y__h4996,
       y__h5103,
       y__h5150,
       y__h5257,
       y__h5304,
       y__h5411,
       y__h5458,
       y__h5565,
       y__h5612,
       y__h5719,
       y__h5766,
       y__h5873,
       y__h5920,
       y__h6027,
       y__h6074,
       y__h6181,
       y__h6228,
       y__h6335,
       y__h6382,
       y__h6489,
       y__h6536,
       y__h6643,
       y__h6690,
       y__h6797,
       y__h6844,
       y__h6951,
       y__h6998,
       y__h7105,
       y__h7152,
       y__h7259,
       y__h7306,
       y__h7413,
       y__h7460,
       y__h7567,
       y__h7614,
       y__h7721,
       y__h7768,
       y__h7875,
       y__h7922,
       y__h8029,
       y__h8076,
       y__h8183,
       y__h8230,
       y__h8337,
       y__h8384,
       y__h8491,
       y__h8538,
       y__h8645,
       y__h8692,
       y__h8799,
       y__h8846;

  // action method start
  assign RDY_start = !inp_fifo_rv_port1__read[97] ;
  assign CAN_FIRE_start = !inp_fifo_rv_port1__read[97] ;
  assign WILL_FIRE_start = EN_start ;

  // value method get_result
  assign get_result = ans ;
  assign RDY_get_result = rg_out_valid ;

  // rule RL_r1_fin
  assign CAN_FIRE_RL_r1_fin = adder_ofifo_rv[33] ;
  assign WILL_FIRE_RL_r1_fin = CAN_FIRE_RL_r1_fin ;

  // rule RL_r1_pipe_stage6
  assign CAN_FIRE_RL_r1_pipe_stage6 =
	     stage4_fifo_rv[97] && !adder_ofifo_rv_port1__read[33] ;
  assign WILL_FIRE_RL_r1_pipe_stage6 = CAN_FIRE_RL_r1_pipe_stage6 ;

  // rule RL_r1_pipe_stage5
  assign CAN_FIRE_RL_r1_pipe_stage5 =
	     stage3_fifo_rv[97] && !stage4_fifo_rv_port1__read[97] ;
  assign WILL_FIRE_RL_r1_pipe_stage5 = CAN_FIRE_RL_r1_pipe_stage5 ;

  // rule RL_r1_pipe_stage4
  assign CAN_FIRE_RL_r1_pipe_stage4 =
	     stage2_fifo_rv[97] && !stage3_fifo_rv_port1__read[97] ;
  assign WILL_FIRE_RL_r1_pipe_stage4 = CAN_FIRE_RL_r1_pipe_stage4 ;

  // rule RL_r1_pipe_stage3
  assign CAN_FIRE_RL_r1_pipe_stage3 =
	     adder_ififo_rv[64] && !stage2_fifo_rv_port1__read[97] ;
  assign WILL_FIRE_RL_r1_pipe_stage3 = CAN_FIRE_RL_r1_pipe_stage3 ;

  // rule RL_r1_pipe_stage2
  assign CAN_FIRE_RL_r1_pipe_stage2 =
	     stage1_fifo_rv[161] && !adder_ififo_rv_port1__read[64] ;
  assign WILL_FIRE_RL_r1_pipe_stage2 = CAN_FIRE_RL_r1_pipe_stage2 ;

  // rule RL_r1_pipe_stage1
  assign CAN_FIRE_RL_r1_pipe_stage1 =
	     inp_fifo_rv[97] && !stage1_fifo_rv_port1__read[161] ;
  assign WILL_FIRE_RL_r1_pipe_stage1 = CAN_FIRE_RL_r1_pipe_stage1 ;

  // rule RL_rg_out_valid__dreg_update
  assign CAN_FIRE_RL_rg_out_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_rg_out_valid__dreg_update = 1'd1 ;

  // inlined wires
  assign inp_fifo_rv_port0__write_1 =
	     { 1'd0,
	       97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign inp_fifo_rv_port1__read =
	     CAN_FIRE_RL_r1_pipe_stage1 ?
	       inp_fifo_rv_port0__write_1 :
	       inp_fifo_rv ;
  assign inp_fifo_rv_port1__write_1 =
	     { 1'd1, x__h29227, x__h29276, start_c, v_sign__h29231 } ;
  assign inp_fifo_rv_port2__read =
	     EN_start ? inp_fifo_rv_port1__write_1 : inp_fifo_rv_port1__read ;
  assign stage1_fifo_rv_port0__write_1 =
	     { 1'd0,
	       161'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign stage1_fifo_rv_port1__read =
	     CAN_FIRE_RL_r1_pipe_stage2 ?
	       stage1_fifo_rv_port0__write_1 :
	       stage1_fifo_rv ;
  assign stage1_fifo_rv_port1__write_1 =
	     { 1'd1,
	       inp_fifo_rv[96:0],
	       IF_inp_fifo_rv_port0__read_BIT_36_2_THEN_inp_f_ETC___d56 } ;
  assign stage1_fifo_rv_port2__read =
	     CAN_FIRE_RL_r1_pipe_stage1 ?
	       stage1_fifo_rv_port1__write_1 :
	       stage1_fifo_rv_port1__read ;
  assign adder_ififo_rv_port0__write_1 =
	     { 1'd0,
	       64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign adder_ififo_rv_port1__read =
	     CAN_FIRE_RL_r1_pipe_stage3 ?
	       adder_ififo_rv_port0__write_1 :
	       adder_ififo_rv ;
  assign adder_ififo_rv_port1__write_1 =
	     { 1'd1, x__h2489, stage1_fifo_rv[96:65] } ;
  assign adder_ififo_rv_port2__read =
	     CAN_FIRE_RL_r1_pipe_stage2 ?
	       adder_ififo_rv_port1__write_1 :
	       adder_ififo_rv_port1__read ;
  assign stage2_fifo_rv_port1__read =
	     CAN_FIRE_RL_r1_pipe_stage4 ?
	       inp_fifo_rv_port0__write_1 :
	       stage2_fifo_rv ;
  assign stage2_fifo_rv_port1__write_1 =
	     { 1'd1, adder_ififo_rv[63:0], v_sum__h11585 } ;
  assign stage2_fifo_rv_port2__read =
	     CAN_FIRE_RL_r1_pipe_stage3 ?
	       stage2_fifo_rv_port1__write_1 :
	       stage2_fifo_rv_port1__read ;
  assign stage3_fifo_rv_port1__read =
	     CAN_FIRE_RL_r1_pipe_stage5 ?
	       inp_fifo_rv_port0__write_1 :
	       stage3_fifo_rv ;
  assign stage3_fifo_rv_port1__write_1 =
	     { 1'd1, stage2_fifo_rv[96:33], v_sum__h15918 } ;
  assign stage3_fifo_rv_port2__read =
	     CAN_FIRE_RL_r1_pipe_stage4 ?
	       stage3_fifo_rv_port1__write_1 :
	       stage3_fifo_rv_port1__read ;
  assign stage4_fifo_rv_port1__read =
	     CAN_FIRE_RL_r1_pipe_stage6 ?
	       inp_fifo_rv_port0__write_1 :
	       stage4_fifo_rv ;
  assign stage4_fifo_rv_port1__write_1 =
	     { 1'd1, stage3_fifo_rv[96:33], v_sum__h20320 } ;
  assign stage4_fifo_rv_port2__read =
	     CAN_FIRE_RL_r1_pipe_stage5 ?
	       stage4_fifo_rv_port1__write_1 :
	       stage4_fifo_rv_port1__read ;
  assign adder_ofifo_rv_port0__write_1 =
	     { 1'd0,
	       33'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign adder_ofifo_rv_port1__read =
	     adder_ofifo_rv[33] ?
	       adder_ofifo_rv_port0__write_1 :
	       adder_ofifo_rv ;
  assign adder_ofifo_rv_port1__write_1 =
	     { 1'd1, v_overflow__h24719, v_sum__h24720 } ;
  assign adder_ofifo_rv_port2__read =
	     CAN_FIRE_RL_r1_pipe_stage6 ?
	       adder_ofifo_rv_port1__write_1 :
	       adder_ofifo_rv_port1__read ;

  // register adder_ififo_rv
  assign adder_ififo_rv_D_IN = adder_ififo_rv_port2__read ;
  assign adder_ififo_rv_EN = 1'b1 ;

  // register adder_ofifo_rv
  assign adder_ofifo_rv_D_IN = adder_ofifo_rv_port2__read ;
  assign adder_ofifo_rv_EN = 1'b1 ;

  // register ans
  assign ans_D_IN = adder_ofifo_rv[31:0] ;
  assign ans_EN = CAN_FIRE_RL_r1_fin ;

  // register inp_fifo_rv
  assign inp_fifo_rv_D_IN = inp_fifo_rv_port2__read ;
  assign inp_fifo_rv_EN = 1'b1 ;

  // register rg_out_valid
  assign rg_out_valid_D_IN = CAN_FIRE_RL_r1_fin ;
  assign rg_out_valid_EN = 1'd1 ;

  // register stage1_fifo_rv
  assign stage1_fifo_rv_D_IN = stage1_fifo_rv_port2__read ;
  assign stage1_fifo_rv_EN = 1'b1 ;

  // register stage2_fifo_rv
  assign stage2_fifo_rv_D_IN = stage2_fifo_rv_port2__read ;
  assign stage2_fifo_rv_EN = 1'b1 ;

  // register stage3_fifo_rv
  assign stage3_fifo_rv_D_IN = stage3_fifo_rv_port2__read ;
  assign stage3_fifo_rv_EN = 1'b1 ;

  // register stage4_fifo_rv
  assign stage4_fifo_rv_D_IN = stage4_fifo_rv_port2__read ;
  assign stage4_fifo_rv_EN = 1'b1 ;

  // remaining internal signals
  assign IF_IF_stage1_fifo_rv_port0__read__8_BIT_104_6__ETC__q12 =
	     (IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[0] &
	      IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[0]) ?
	       33'd2 :
	       33'd0 ;
  assign IF_adder_ififo_rv_BIT_32_AND_adder_ififo_rv_BI_ETC__q6 =
	     (adder_ififo_rv[32] & adder_ififo_rv[0]) ? 9'd2 : 9'd0 ;
  assign IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_IF_in_ETC___d27 =
	     inp_fifo_rv[34] ? lsb_result_carry__h2096 : 32'd0 ;
  assign IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_inp_f_ETC___d54 =
	     inp_fifo_rv[34] ?
	       { lsb_result_sum__h2095, lsb_result_carry__h2096 } :
	       { cin__h2093, 32'd0 } ;
  assign IF_inp_fifo_rv_port0__read_BIT_35_5_THEN_inp_f_ETC___d55 =
	     inp_fifo_rv[35] ?
	       { lsb_result_sum__h2066, lsb_result_carry__h2067 } :
	       IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_inp_f_ETC___d54 ;
  assign IF_inp_fifo_rv_port0__read_BIT_36_2_THEN_inp_f_ETC___d56 =
	     inp_fifo_rv[36] ?
	       { lsb_result_sum__h2037, lsb_result_carry__h2038 } :
	       IF_inp_fifo_rv_port0__read_BIT_35_5_THEN_inp_f_ETC___d55 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115 =
	     stage1_fifo_rv[104] ? stage_result_sum__h3475 : cin__h3473 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124 =
	     stage1_fifo_rv[104] ? stage_result_carry__h3476 : b__h3472 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d312 =
	     x__h3393 ^ y__h3394 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d314 =
	     y__h8846 ^ x__h8845 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d316 =
	     y__h8692 ^ x__h8691 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d318 =
	     y__h8538 ^ x__h8537 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d320 =
	     y__h8384 ^ x__h8383 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d322 =
	     y__h8230 ^ x__h8229 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d324 =
	     y__h8076 ^ x__h8075 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d326 =
	     y__h7922 ^ x__h7921 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d328 =
	     y__h7768 ^ x__h7767 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d330 =
	     y__h7614 ^ x__h7613 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d332 =
	     y__h7460 ^ x__h7459 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d334 =
	     y__h7306 ^ x__h7305 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d336 =
	     y__h7152 ^ x__h7151 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d338 =
	     y__h6998 ^ x__h6997 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d340 =
	     y__h6844 ^ x__h6843 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d342 =
	     y__h6690 ^ x__h6689 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d344 =
	     y__h6536 ^ x__h6535 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d346 =
	     y__h6382 ^ x__h6381 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d348 =
	     y__h6228 ^ x__h6227 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d350 =
	     y__h6074 ^ x__h6073 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d352 =
	     y__h5920 ^ x__h5919 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d354 =
	     y__h5766 ^ x__h5765 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d356 =
	     y__h5612 ^ x__h5611 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d358 =
	     y__h5458 ^ x__h5457 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d360 =
	     y__h5304 ^ x__h5303 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d362 =
	     y__h5150 ^ x__h5149 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d364 =
	     y__h4996 ^ x__h4995 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d366 =
	     y__h4842 ^ x__h4841 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d368 =
	     y__h4688 ^ x__h4687 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d370 =
	     y__h4534 ^ x__h4533 ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d372 =
	     y__h4379 ^
	     IF_IF_stage1_fifo_rv_port0__read__8_BIT_104_6__ETC__q12[1] ;
  assign IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d374 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[0] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[0] ;
  assign IF_stage2_fifo_rv_BIT_8_THEN_1_ELSE_0__q7 =
	     stage2_fifo_rv[8] ? 9'd1 : 9'd0 ;
  assign IF_stage3_fifo_rv_BIT_16_THEN_1_ELSE_0__q8 =
	     stage3_fifo_rv[16] ? 9'd1 : 9'd0 ;
  assign IF_stage4_fifo_rv_BIT_24_THEN_1_ELSE_0__q9 =
	     stage4_fifo_rv[24] ? 9'd1 : 9'd0 ;
  assign a_ext___1__h29271 = ~a_ext__h29142 + 32'd1 ;
  assign a_ext__h29142 = { {24{start_a[7]}}, start_a } ;
  assign adder_ififo_rv_port0__read__12_BIT_34_35_XOR_a_ETC___d475 =
	     { y__h12694 ^ x__h12693,
	       y__h12411 ^
	       IF_adder_ififo_rv_BIT_32_AND_adder_ififo_rv_BI_ETC__q6[1],
	       adder_ififo_rv[32] ^ adder_ififo_rv[0] } ;
  assign adder_ififo_rv_port0__read__12_BIT_36_29_XOR_a_ETC___d476 =
	     { y__h13258 ^ x__h13257,
	       y__h12976 ^ x__h12975,
	       adder_ififo_rv_port0__read__12_BIT_34_35_XOR_a_ETC___d475 } ;
  assign adder_ififo_rv_port0__read__12_BIT_38_23_XOR_a_ETC___d477 =
	     { y__h13822 ^ x__h13821,
	       y__h13540 ^ x__h13539,
	       adder_ififo_rv_port0__read__12_BIT_36_29_XOR_a_ETC___d476 } ;
  assign b__h2034 =
	     inp_fifo_rv[35] ?
	       lsb_result_carry__h2067 :
	       IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_IF_in_ETC___d27 ;
  assign b__h3472 =
	     stage1_fifo_rv[103] ? stage_result_carry__h3505 : b__h3501 ;
  assign b__h3501 =
	     stage1_fifo_rv[102] ? stage_result_carry__h3534 : b__h3530 ;
  assign b__h3530 =
	     stage1_fifo_rv[101] ?
	       stage_result_carry__h3563 :
	       stage1_fifo_rv[31:0] ;
  assign b_ext___1__h29303 = ~b_ext__h29143 + 32'd1 ;
  assign b_ext__h29143 = { {24{start_b[7]}}, start_b } ;
  assign cin093_AND_shift_a090__q1 = cin__h2093 & shift_a__h2090 ;
  assign cin__h2035 = inp_fifo_rv[35] ? lsb_result_sum__h2066 : cin__h2064 ;
  assign cin__h2064 = inp_fifo_rv[34] ? lsb_result_sum__h2095 : cin__h2093 ;
  assign cin__h2093 = inp_fifo_rv[33] ? inp_fifo_rv[96:65] : 32'b0 ;
  assign cin__h3473 =
	     stage1_fifo_rv[103] ? stage_result_sum__h3504 : cin__h3502 ;
  assign cin__h3502 =
	     stage1_fifo_rv[102] ? stage_result_sum__h3533 : cin__h3531 ;
  assign cin__h3531 =
	     stage1_fifo_rv[101] ?
	       stage_result_sum__h3562 :
	       stage1_fifo_rv[63:32] ;
  assign lsb_result_carry__h2038 = { x285_OR_y286__q11[30:0], 1'd0 } ;
  assign lsb_result_carry__h2067 = { x165_OR_y166__q10[30:0], 1'd0 } ;
  assign lsb_result_carry__h2096 = { cin093_AND_shift_a090__q1[30:0], 1'd0 } ;
  assign lsb_result_sum__h2037 = x__h2147 ^ cin__h2035 ;
  assign lsb_result_sum__h2066 = x__h2271 ^ cin__h2064 ;
  assign lsb_result_sum__h2095 = shift_a__h2090 ^ cin__h2093 ;
  assign product___1__h2527 =
	     { ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d312,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d314,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d316,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d318,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d320,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d322,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d324,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d326,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d328,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d330,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d332,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d334,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d336,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d338,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d340,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d342,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d344,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d346,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d348,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d350,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d352,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d354,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d356,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d358,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d360,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d362,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d364,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d366,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d368,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d370,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d372,
	       ~IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d374 } +
	     32'd1 ;
  assign product__h2314 =
	     { IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d312,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d314,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d316,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d318,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d320,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d322,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d324,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d326,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d328,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d330,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d332,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d334,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d336,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d338,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d340,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d342,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d344,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d346,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d348,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d350,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d352,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d354,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d356,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d358,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d360,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d362,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d364,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d366,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d368,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d370,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d372,
	       IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d374 } ;
  assign psum1__h11405 =
	     { x__h14006 | y__h14007,
	       y__h14104 ^ x__h14103,
	       adder_ififo_rv_port0__read__12_BIT_38_23_XOR_a_ETC___d477 } ;
  assign psum2__h15743 =
	     { x__h18388 | y__h18389,
	       y__h18486 ^ x__h18485,
	       stage2_fifo_rv_port0__read__81_BIT_79_91_XOR_s_ETC___d549 } ;
  assign psum2__h20145 =
	     { x__h22790 | y__h22791,
	       y__h22888 ^ x__h22887,
	       stage3_fifo_rv_port0__read__55_BIT_87_65_XOR_s_ETC___d623 } ;
  assign shift_a__h2032 = { inp_fifo_rv[93:65], 3'd0 } ;
  assign shift_a__h2061 = { inp_fifo_rv[94:65], 2'd0 } ;
  assign shift_a__h2090 = { inp_fifo_rv[95:65], 1'd0 } ;
  assign shift_a__h3470 = { stage1_fifo_rv[153:129], 7'd0 } ;
  assign shift_a__h3499 = { stage1_fifo_rv[154:129], 6'd0 } ;
  assign shift_a__h3528 = { stage1_fifo_rv[155:129], 5'd0 } ;
  assign shift_a__h3557 = { stage1_fifo_rv[156:129], 4'd0 } ;
  assign sign___1__h29304 = ~start_a[7] ;
  assign stage2_fifo_rv_port0__read__81_BIT_75_03_XOR_s_ETC___d547 =
	     { y__h17076 ^ x__h17075,
	       y__h16794 ^ x__h16793,
	       y__h16511 ^ IF_stage2_fifo_rv_BIT_8_THEN_1_ELSE_0__q7[0] } ;
  assign stage2_fifo_rv_port0__read__81_BIT_77_97_XOR_s_ETC___d548 =
	     { y__h17640 ^ x__h17639,
	       y__h17358 ^ x__h17357,
	       stage2_fifo_rv_port0__read__81_BIT_75_03_XOR_s_ETC___d547 } ;
  assign stage2_fifo_rv_port0__read__81_BIT_79_91_XOR_s_ETC___d549 =
	     { y__h18204 ^ x__h18203,
	       y__h17922 ^ x__h17921,
	       stage2_fifo_rv_port0__read__81_BIT_77_97_XOR_s_ETC___d548 } ;
  assign stage3_fifo_rv_port0__read__55_BIT_83_77_XOR_s_ETC___d621 =
	     { y__h21478 ^ x__h21477,
	       y__h21196 ^ x__h21195,
	       y__h20913 ^ IF_stage3_fifo_rv_BIT_16_THEN_1_ELSE_0__q8[0] } ;
  assign stage3_fifo_rv_port0__read__55_BIT_85_71_XOR_s_ETC___d622 =
	     { y__h22042 ^ x__h22041,
	       y__h21760 ^ x__h21759,
	       stage3_fifo_rv_port0__read__55_BIT_83_77_XOR_s_ETC___d621 } ;
  assign stage3_fifo_rv_port0__read__55_BIT_87_65_XOR_s_ETC___d623 =
	     { y__h22606 ^ x__h22605,
	       y__h22324 ^ x__h22323,
	       stage3_fifo_rv_port0__read__55_BIT_85_71_XOR_s_ETC___d622 } ;
  assign stage4_fifo_rv_port0__read__29_BIT_91_50_XOR_s_ETC___d694 =
	     { y__h25888 ^ x__h25887,
	       y__h25606 ^ x__h25605,
	       y__h25323 ^ IF_stage4_fifo_rv_BIT_24_THEN_1_ELSE_0__q9[0] } ;
  assign stage4_fifo_rv_port0__read__29_BIT_93_44_XOR_s_ETC___d695 =
	     { y__h26452 ^ x__h26451,
	       y__h26170 ^ x__h26169,
	       stage4_fifo_rv_port0__read__29_BIT_91_50_XOR_s_ETC___d694 } ;
  assign stage4_fifo_rv_port0__read__29_BIT_95_38_XOR_s_ETC___d696 =
	     { y__h27016 ^ x__h27015,
	       y__h26734 ^ x__h26733,
	       stage4_fifo_rv_port0__read__29_BIT_93_44_XOR_s_ETC___d695 } ;
  assign stage_result_carry__h3476 = { x736_OR_y737__q5[30:0], 1'd0 } ;
  assign stage_result_carry__h3505 = { x605_OR_y606__q4[30:0], 1'd0 } ;
  assign stage_result_carry__h3534 = { x625_OR_y626__q3[30:0], 1'd0 } ;
  assign stage_result_carry__h3563 = { x645_OR_y646__q2[30:0], 1'd0 } ;
  assign stage_result_sum__h3475 = x__h3588 ^ cin__h3473 ;
  assign stage_result_sum__h3504 = x__h3702 ^ cin__h3502 ;
  assign stage_result_sum__h3533 = x__h3686 ^ cin__h3531 ;
  assign stage_result_sum__h3562 = x__h3670 ^ stage1_fifo_rv[63:32] ;
  assign v_overflow__h24719 = x__h27200 | y__h27201 ;
  assign v_sign__h29231 = start_b[7] ? sign___1__h29304 : start_a[7] ;
  assign v_sum__h11585 = { 24'd0, psum1__h11405 } ;
  assign v_sum__h15918 = { 16'd0, x__h15953 } ;
  assign v_sum__h20320 = { 8'd0, x__h20355 } ;
  assign v_sum__h24720 =
	     { y__h27298 ^ x__h27297,
	       stage4_fifo_rv_port0__read__29_BIT_95_38_XOR_s_ETC___d696,
	       stage4_fifo_rv[23:0] } ;
  assign x165_OR_y166__q10 = x__h2165 | y__h2166 ;
  assign x285_OR_y286__q11 = x__h2285 | y__h2286 ;
  assign x605_OR_y606__q4 = x__h3605 | y__h3606 ;
  assign x625_OR_y626__q3 = x__h3625 | y__h3626 ;
  assign x645_OR_y646__q2 = x__h3645 | y__h3646 ;
  assign x736_OR_y737__q5 = x__h3736 | y__h3737 ;
  assign x__h12313 = adder_ififo_rv[33] & adder_ififo_rv[1] ;
  assign x__h12596 = adder_ififo_rv[34] & adder_ififo_rv[2] ;
  assign x__h12693 = x__h12313 | y__h12314 ;
  assign x__h12878 = adder_ififo_rv[35] & adder_ififo_rv[3] ;
  assign x__h12975 = x__h12596 | y__h12597 ;
  assign x__h13160 = adder_ififo_rv[36] & adder_ififo_rv[4] ;
  assign x__h13257 = x__h12878 | y__h12879 ;
  assign x__h13442 = adder_ififo_rv[37] & adder_ififo_rv[5] ;
  assign x__h13539 = x__h13160 | y__h13161 ;
  assign x__h13724 = adder_ififo_rv[38] & adder_ififo_rv[6] ;
  assign x__h13821 = x__h13442 | y__h13443 ;
  assign x__h14006 = adder_ififo_rv[39] & adder_ififo_rv[7] ;
  assign x__h14103 = x__h13724 | y__h13725 ;
  assign x__h15953 = { psum2__h15743, stage2_fifo_rv[7:0] } ;
  assign x__h16373 = stage2_fifo_rv[73] & stage2_fifo_rv[41] ;
  assign x__h16696 = stage2_fifo_rv[74] & stage2_fifo_rv[42] ;
  assign x__h16793 = x__h16373 | y__h16374 ;
  assign x__h16978 = stage2_fifo_rv[75] & stage2_fifo_rv[43] ;
  assign x__h17075 = x__h16696 | y__h16697 ;
  assign x__h17260 = stage2_fifo_rv[76] & stage2_fifo_rv[44] ;
  assign x__h17357 = x__h16978 | y__h16979 ;
  assign x__h17542 = stage2_fifo_rv[77] & stage2_fifo_rv[45] ;
  assign x__h17639 = x__h17260 | y__h17261 ;
  assign x__h17824 = stage2_fifo_rv[78] & stage2_fifo_rv[46] ;
  assign x__h17921 = x__h17542 | y__h17543 ;
  assign x__h18106 = stage2_fifo_rv[79] & stage2_fifo_rv[47] ;
  assign x__h18203 = x__h17824 | y__h17825 ;
  assign x__h18388 = stage2_fifo_rv[80] & stage2_fifo_rv[48] ;
  assign x__h18485 = x__h18106 | y__h18107 ;
  assign x__h20355 = { psum2__h20145, stage3_fifo_rv[15:0] } ;
  assign x__h20775 = stage3_fifo_rv[81] & stage3_fifo_rv[49] ;
  assign x__h21098 = stage3_fifo_rv[82] & stage3_fifo_rv[50] ;
  assign x__h21195 = x__h20775 | y__h20776 ;
  assign x__h21380 = stage3_fifo_rv[83] & stage3_fifo_rv[51] ;
  assign x__h2147 = shift_a__h2032 ^ b__h2034 ;
  assign x__h21477 = x__h21098 | y__h21099 ;
  assign x__h2165 = x__h2167 | y__h2168 ;
  assign x__h21662 = stage3_fifo_rv[84] & stage3_fifo_rv[52] ;
  assign x__h2167 =
	     shift_a__h2061 &
	     IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_IF_in_ETC___d27 ;
  assign x__h21759 = x__h21380 | y__h21381 ;
  assign x__h21944 = stage3_fifo_rv[85] & stage3_fifo_rv[53] ;
  assign x__h22041 = x__h21662 | y__h21663 ;
  assign x__h22226 = stage3_fifo_rv[86] & stage3_fifo_rv[54] ;
  assign x__h22323 = x__h21944 | y__h21945 ;
  assign x__h22508 = stage3_fifo_rv[87] & stage3_fifo_rv[55] ;
  assign x__h22605 = x__h22226 | y__h22227 ;
  assign x__h2271 =
	     shift_a__h2061 ^
	     IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_IF_in_ETC___d27 ;
  assign x__h22790 = stage3_fifo_rv[88] & stage3_fifo_rv[56] ;
  assign x__h2285 = x__h2287 | y__h2288 ;
  assign x__h2287 = shift_a__h2032 & b__h2034 ;
  assign x__h22887 = x__h22508 | y__h22509 ;
  assign x__h2489 = stage1_fifo_rv[64] ? product___1__h2527 : product__h2314 ;
  assign x__h25185 = stage4_fifo_rv[89] & stage4_fifo_rv[57] ;
  assign x__h25508 = stage4_fifo_rv[90] & stage4_fifo_rv[58] ;
  assign x__h25605 = x__h25185 | y__h25186 ;
  assign x__h25790 = stage4_fifo_rv[91] & stage4_fifo_rv[59] ;
  assign x__h25887 = x__h25508 | y__h25509 ;
  assign x__h26072 = stage4_fifo_rv[92] & stage4_fifo_rv[60] ;
  assign x__h26169 = x__h25790 | y__h25791 ;
  assign x__h26354 = stage4_fifo_rv[93] & stage4_fifo_rv[61] ;
  assign x__h26451 = x__h26072 | y__h26073 ;
  assign x__h26636 = stage4_fifo_rv[94] & stage4_fifo_rv[62] ;
  assign x__h26733 = x__h26354 | y__h26355 ;
  assign x__h26918 = stage4_fifo_rv[95] & stage4_fifo_rv[63] ;
  assign x__h27015 = x__h26636 | y__h26637 ;
  assign x__h27200 = stage4_fifo_rv[96] & stage4_fifo_rv[64] ;
  assign x__h27297 = x__h26918 | y__h26919 ;
  assign x__h29227 = start_a[7] ? a_ext___1__h29271 : a_ext__h29142 ;
  assign x__h29276 = start_b[7] ? b_ext___1__h29303 : b_ext__h29143 ;
  assign x__h3393 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[31] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[31] ;
  assign x__h3588 = shift_a__h3470 ^ b__h3472 ;
  assign x__h3605 = x__h3607 | y__h3608 ;
  assign x__h3607 = shift_a__h3499 & b__h3501 ;
  assign x__h3625 = x__h3627 | y__h3628 ;
  assign x__h3627 = shift_a__h3528 & b__h3530 ;
  assign x__h3645 = x__h3647 | y__h3648 ;
  assign x__h3647 = shift_a__h3557 & stage1_fifo_rv[31:0] ;
  assign x__h3670 = shift_a__h3557 ^ stage1_fifo_rv[31:0] ;
  assign x__h3686 = shift_a__h3528 ^ b__h3530 ;
  assign x__h3702 = shift_a__h3499 ^ b__h3501 ;
  assign x__h3736 = x__h3738 | y__h3739 ;
  assign x__h3738 = shift_a__h3470 & b__h3472 ;
  assign x__h4331 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[1] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[1] ;
  assign x__h4486 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[2] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[2] ;
  assign x__h4533 = x__h4331 | y__h4332 ;
  assign x__h4640 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[3] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[3] ;
  assign x__h4687 = x__h4486 | y__h4487 ;
  assign x__h4794 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[4] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[4] ;
  assign x__h4841 = x__h4640 | y__h4641 ;
  assign x__h4948 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[5] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[5] ;
  assign x__h4995 = x__h4794 | y__h4795 ;
  assign x__h5102 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[6] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[6] ;
  assign x__h5149 = x__h4948 | y__h4949 ;
  assign x__h5256 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[7] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[7] ;
  assign x__h5303 = x__h5102 | y__h5103 ;
  assign x__h5410 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[8] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[8] ;
  assign x__h5457 = x__h5256 | y__h5257 ;
  assign x__h5564 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[9] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[9] ;
  assign x__h5611 = x__h5410 | y__h5411 ;
  assign x__h5718 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[10] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[10] ;
  assign x__h5765 = x__h5564 | y__h5565 ;
  assign x__h5872 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[11] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[11] ;
  assign x__h5919 = x__h5718 | y__h5719 ;
  assign x__h6026 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[12] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[12] ;
  assign x__h6073 = x__h5872 | y__h5873 ;
  assign x__h6180 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[13] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[13] ;
  assign x__h6227 = x__h6026 | y__h6027 ;
  assign x__h6334 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[14] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[14] ;
  assign x__h6381 = x__h6180 | y__h6181 ;
  assign x__h6488 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[15] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[15] ;
  assign x__h6535 = x__h6334 | y__h6335 ;
  assign x__h6642 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[16] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[16] ;
  assign x__h6689 = x__h6488 | y__h6489 ;
  assign x__h6796 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[17] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[17] ;
  assign x__h6843 = x__h6642 | y__h6643 ;
  assign x__h6950 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[18] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[18] ;
  assign x__h6997 = x__h6796 | y__h6797 ;
  assign x__h7104 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[19] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[19] ;
  assign x__h7151 = x__h6950 | y__h6951 ;
  assign x__h7258 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[20] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[20] ;
  assign x__h7305 = x__h7104 | y__h7105 ;
  assign x__h7412 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[21] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[21] ;
  assign x__h7459 = x__h7258 | y__h7259 ;
  assign x__h7566 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[22] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[22] ;
  assign x__h7613 = x__h7412 | y__h7413 ;
  assign x__h7720 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[23] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[23] ;
  assign x__h7767 = x__h7566 | y__h7567 ;
  assign x__h7874 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[24] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[24] ;
  assign x__h7921 = x__h7720 | y__h7721 ;
  assign x__h8028 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[25] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[25] ;
  assign x__h8075 = x__h7874 | y__h7875 ;
  assign x__h8182 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[26] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[26] ;
  assign x__h8229 = x__h8028 | y__h8029 ;
  assign x__h8336 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[27] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[27] ;
  assign x__h8383 = x__h8182 | y__h8183 ;
  assign x__h8490 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[28] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[28] ;
  assign x__h8537 = x__h8336 | y__h8337 ;
  assign x__h8644 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[29] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[29] ;
  assign x__h8691 = x__h8490 | y__h8491 ;
  assign x__h8798 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[30] &
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[30] ;
  assign x__h8845 = x__h8644 | y__h8645 ;
  assign y__h12314 =
	     IF_adder_ififo_rv_BIT_32_AND_adder_ififo_rv_BI_ETC__q6[1] &
	     y__h12411 ;
  assign y__h12411 = adder_ififo_rv[33] ^ adder_ififo_rv[1] ;
  assign y__h12597 = x__h12693 & y__h12694 ;
  assign y__h12694 = adder_ififo_rv[34] ^ adder_ififo_rv[2] ;
  assign y__h12879 = x__h12975 & y__h12976 ;
  assign y__h12976 = adder_ififo_rv[35] ^ adder_ififo_rv[3] ;
  assign y__h13161 = x__h13257 & y__h13258 ;
  assign y__h13258 = adder_ififo_rv[36] ^ adder_ififo_rv[4] ;
  assign y__h13443 = x__h13539 & y__h13540 ;
  assign y__h13540 = adder_ififo_rv[37] ^ adder_ififo_rv[5] ;
  assign y__h13725 = x__h13821 & y__h13822 ;
  assign y__h13822 = adder_ififo_rv[38] ^ adder_ififo_rv[6] ;
  assign y__h14007 = x__h14103 & y__h14104 ;
  assign y__h14104 = adder_ififo_rv[39] ^ adder_ififo_rv[7] ;
  assign y__h16374 =
	     IF_stage2_fifo_rv_BIT_8_THEN_1_ELSE_0__q7[0] & y__h16511 ;
  assign y__h16511 = stage2_fifo_rv[73] ^ stage2_fifo_rv[41] ;
  assign y__h16697 = x__h16793 & y__h16794 ;
  assign y__h16794 = stage2_fifo_rv[74] ^ stage2_fifo_rv[42] ;
  assign y__h16979 = x__h17075 & y__h17076 ;
  assign y__h17076 = stage2_fifo_rv[75] ^ stage2_fifo_rv[43] ;
  assign y__h17261 = x__h17357 & y__h17358 ;
  assign y__h17358 = stage2_fifo_rv[76] ^ stage2_fifo_rv[44] ;
  assign y__h17543 = x__h17639 & y__h17640 ;
  assign y__h17640 = stage2_fifo_rv[77] ^ stage2_fifo_rv[45] ;
  assign y__h17825 = x__h17921 & y__h17922 ;
  assign y__h17922 = stage2_fifo_rv[78] ^ stage2_fifo_rv[46] ;
  assign y__h18107 = x__h18203 & y__h18204 ;
  assign y__h18204 = stage2_fifo_rv[79] ^ stage2_fifo_rv[47] ;
  assign y__h18389 = x__h18485 & y__h18486 ;
  assign y__h18486 = stage2_fifo_rv[80] ^ stage2_fifo_rv[48] ;
  assign y__h20776 =
	     IF_stage3_fifo_rv_BIT_16_THEN_1_ELSE_0__q8[0] & y__h20913 ;
  assign y__h20913 = stage3_fifo_rv[81] ^ stage3_fifo_rv[49] ;
  assign y__h21099 = x__h21195 & y__h21196 ;
  assign y__h21196 = stage3_fifo_rv[82] ^ stage3_fifo_rv[50] ;
  assign y__h21381 = x__h21477 & y__h21478 ;
  assign y__h21478 = stage3_fifo_rv[83] ^ stage3_fifo_rv[51] ;
  assign y__h2166 = cin__h2064 & shift_a__h2061 ;
  assign y__h21663 = x__h21759 & y__h21760 ;
  assign y__h2168 =
	     IF_inp_fifo_rv_port0__read_BIT_34_8_THEN_IF_in_ETC___d27 &
	     cin__h2064 ;
  assign y__h21760 = stage3_fifo_rv[84] ^ stage3_fifo_rv[52] ;
  assign y__h21945 = x__h22041 & y__h22042 ;
  assign y__h22042 = stage3_fifo_rv[85] ^ stage3_fifo_rv[53] ;
  assign y__h22227 = x__h22323 & y__h22324 ;
  assign y__h22324 = stage3_fifo_rv[86] ^ stage3_fifo_rv[54] ;
  assign y__h22509 = x__h22605 & y__h22606 ;
  assign y__h22606 = stage3_fifo_rv[87] ^ stage3_fifo_rv[55] ;
  assign y__h22791 = x__h22887 & y__h22888 ;
  assign y__h2286 = cin__h2035 & shift_a__h2032 ;
  assign y__h2288 = b__h2034 & cin__h2035 ;
  assign y__h22888 = stage3_fifo_rv[88] ^ stage3_fifo_rv[56] ;
  assign y__h25186 =
	     IF_stage4_fifo_rv_BIT_24_THEN_1_ELSE_0__q9[0] & y__h25323 ;
  assign y__h25323 = stage4_fifo_rv[89] ^ stage4_fifo_rv[57] ;
  assign y__h25509 = x__h25605 & y__h25606 ;
  assign y__h25606 = stage4_fifo_rv[90] ^ stage4_fifo_rv[58] ;
  assign y__h25791 = x__h25887 & y__h25888 ;
  assign y__h25888 = stage4_fifo_rv[91] ^ stage4_fifo_rv[59] ;
  assign y__h26073 = x__h26169 & y__h26170 ;
  assign y__h26170 = stage4_fifo_rv[92] ^ stage4_fifo_rv[60] ;
  assign y__h26355 = x__h26451 & y__h26452 ;
  assign y__h26452 = stage4_fifo_rv[93] ^ stage4_fifo_rv[61] ;
  assign y__h26637 = x__h26733 & y__h26734 ;
  assign y__h26734 = stage4_fifo_rv[94] ^ stage4_fifo_rv[62] ;
  assign y__h26919 = x__h27015 & y__h27016 ;
  assign y__h27016 = stage4_fifo_rv[95] ^ stage4_fifo_rv[63] ;
  assign y__h27201 = x__h27297 & y__h27298 ;
  assign y__h27298 = stage4_fifo_rv[96] ^ stage4_fifo_rv[64] ;
  assign y__h3394 = x__h8798 | y__h8799 ;
  assign y__h3606 = cin__h3502 & shift_a__h3499 ;
  assign y__h3608 = b__h3501 & cin__h3502 ;
  assign y__h3626 = cin__h3531 & shift_a__h3528 ;
  assign y__h3628 = b__h3530 & cin__h3531 ;
  assign y__h3646 = stage1_fifo_rv[63:32] & shift_a__h3557 ;
  assign y__h3648 = stage1_fifo_rv[31:0] & stage1_fifo_rv[63:32] ;
  assign y__h3737 = cin__h3473 & shift_a__h3470 ;
  assign y__h3739 = b__h3472 & cin__h3473 ;
  assign y__h4332 =
	     IF_IF_stage1_fifo_rv_port0__read__8_BIT_104_6__ETC__q12[1] &
	     y__h4379 ;
  assign y__h4379 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[1] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[1] ;
  assign y__h4487 = x__h4533 & y__h4534 ;
  assign y__h4534 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[2] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[2] ;
  assign y__h4641 = x__h4687 & y__h4688 ;
  assign y__h4688 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[3] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[3] ;
  assign y__h4795 = x__h4841 & y__h4842 ;
  assign y__h4842 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[4] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[4] ;
  assign y__h4949 = x__h4995 & y__h4996 ;
  assign y__h4996 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[5] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[5] ;
  assign y__h5103 = x__h5149 & y__h5150 ;
  assign y__h5150 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[6] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[6] ;
  assign y__h5257 = x__h5303 & y__h5304 ;
  assign y__h5304 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[7] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[7] ;
  assign y__h5411 = x__h5457 & y__h5458 ;
  assign y__h5458 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[8] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[8] ;
  assign y__h5565 = x__h5611 & y__h5612 ;
  assign y__h5612 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[9] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[9] ;
  assign y__h5719 = x__h5765 & y__h5766 ;
  assign y__h5766 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[10] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[10] ;
  assign y__h5873 = x__h5919 & y__h5920 ;
  assign y__h5920 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[11] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[11] ;
  assign y__h6027 = x__h6073 & y__h6074 ;
  assign y__h6074 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[12] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[12] ;
  assign y__h6181 = x__h6227 & y__h6228 ;
  assign y__h6228 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[13] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[13] ;
  assign y__h6335 = x__h6381 & y__h6382 ;
  assign y__h6382 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[14] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[14] ;
  assign y__h6489 = x__h6535 & y__h6536 ;
  assign y__h6536 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[15] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[15] ;
  assign y__h6643 = x__h6689 & y__h6690 ;
  assign y__h6690 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[16] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[16] ;
  assign y__h6797 = x__h6843 & y__h6844 ;
  assign y__h6844 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[17] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[17] ;
  assign y__h6951 = x__h6997 & y__h6998 ;
  assign y__h6998 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[18] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[18] ;
  assign y__h7105 = x__h7151 & y__h7152 ;
  assign y__h7152 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[19] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[19] ;
  assign y__h7259 = x__h7305 & y__h7306 ;
  assign y__h7306 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[20] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[20] ;
  assign y__h7413 = x__h7459 & y__h7460 ;
  assign y__h7460 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[21] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[21] ;
  assign y__h7567 = x__h7613 & y__h7614 ;
  assign y__h7614 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[22] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[22] ;
  assign y__h7721 = x__h7767 & y__h7768 ;
  assign y__h7768 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[23] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[23] ;
  assign y__h7875 = x__h7921 & y__h7922 ;
  assign y__h7922 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[24] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[24] ;
  assign y__h8029 = x__h8075 & y__h8076 ;
  assign y__h8076 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[25] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[25] ;
  assign y__h8183 = x__h8229 & y__h8230 ;
  assign y__h8230 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[26] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[26] ;
  assign y__h8337 = x__h8383 & y__h8384 ;
  assign y__h8384 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[27] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[27] ;
  assign y__h8491 = x__h8537 & y__h8538 ;
  assign y__h8538 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[28] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[28] ;
  assign y__h8645 = x__h8691 & y__h8692 ;
  assign y__h8692 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[29] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[29] ;
  assign y__h8799 = x__h8845 & y__h8846 ;
  assign y__h8846 =
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d115[30] ^
	     IF_stage1_fifo_rv_port0__read__8_BIT_104_6_THE_ETC___d124[30] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        adder_ififo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	adder_ofifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      33'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	ans <= `BSV_ASSIGNMENT_DELAY 32'd0;
	inp_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	rg_out_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	stage1_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      161'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	stage2_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	stage3_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	stage4_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      end
    else
      begin
        if (adder_ififo_rv_EN)
	  adder_ififo_rv <= `BSV_ASSIGNMENT_DELAY adder_ififo_rv_D_IN;
	if (adder_ofifo_rv_EN)
	  adder_ofifo_rv <= `BSV_ASSIGNMENT_DELAY adder_ofifo_rv_D_IN;
	if (ans_EN) ans <= `BSV_ASSIGNMENT_DELAY ans_D_IN;
	if (inp_fifo_rv_EN)
	  inp_fifo_rv <= `BSV_ASSIGNMENT_DELAY inp_fifo_rv_D_IN;
	if (rg_out_valid_EN)
	  rg_out_valid <= `BSV_ASSIGNMENT_DELAY rg_out_valid_D_IN;
	if (stage1_fifo_rv_EN)
	  stage1_fifo_rv <= `BSV_ASSIGNMENT_DELAY stage1_fifo_rv_D_IN;
	if (stage2_fifo_rv_EN)
	  stage2_fifo_rv <= `BSV_ASSIGNMENT_DELAY stage2_fifo_rv_D_IN;
	if (stage3_fifo_rv_EN)
	  stage3_fifo_rv <= `BSV_ASSIGNMENT_DELAY stage3_fifo_rv_D_IN;
	if (stage4_fifo_rv_EN)
	  stage4_fifo_rv <= `BSV_ASSIGNMENT_DELAY stage4_fifo_rv_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    adder_ififo_rv = 65'h0AAAAAAAAAAAAAAAA;
    adder_ofifo_rv = 34'h2AAAAAAAA;
    ans = 32'hAAAAAAAA;
    inp_fifo_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    rg_out_valid = 1'h0;
    stage1_fifo_rv = 162'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    stage2_fifo_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    stage3_fifo_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    stage4_fifo_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkMACint32

